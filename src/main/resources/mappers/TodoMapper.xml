<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper 인터페이스와 동일한 이름(대소문자도 일치)의 xml을 작성 -->
<mapper namespace="com.ssg.todoservice.mapper.TodoMapper">
    <!--  태그의 id는 현재 xml 파일과 이름이 일치하는 인터페이스에 정의된 메서드명 -->
    <!--  resultType 속성값으로는 mapper 인터페이스의 메서드의 반환 타입을 지정(소문자 사용)  -->
    <select id="getTime" resultType="string">
        select now()
    </select>

    <!--  전체 리스트 조회  -->
    <select id="selectAll" resultType="com.ssg.todoservice.domain.TodoVO">
        select * from todo
    </select>

    <!--  전체 리스트 조회(페이지네이션 적용)  -->
    <select id="selectList" resultType="com.ssg.todoservice.domain.TodoVO">
        <!--  MyBatis는 기본적으로 getter, setter를 통해 동작하므로, #{skip}은 PageRequestDTO의 getSkip()을 호출  -->
        select * from todo
        order by tno desc
        limit #{skip}, #{size}
    </select>

    <select id="selectOne" resultType="com.ssg.todoservice.domain.TodoVO">
        select * from todo where tno = #{tno}
    </select>

    <select id="getCount" resultType="int">
        <!-- null인 값이 포함되는 것을 방지하기 위해 tno 속성값을 갖는 테이블 행의 개수 카운팅 진행 -->
        select count(tno) from todo
    </select>

    <insert id="insert">
        insert into todo(title, dueDate, writer) values (#{title}, #{dueDate}, #{writer})
    </insert>

    <delete id="delete">
        delete from todo where tno = #{tno}
    </delete>

    <update id="update" >
        update todo set title = #{title}, dueDate = #{dueDate}, finished = #{finished} where tno = #{tno}
    </update>
</mapper>